 Case Study

 1. Display the number of states present in the LocationTable.
   
    SELECT Count(DISTINCT State) FROM Location
--------------------------------------------------------------------------------

 2. How many products are of regular type?

    SELECT COUNT(Product)
    FROM Product
    WHERE Type ='Regular';
-----------------------------------------------------------------------------

 3. How much spending has been done on marketing of product ID 1?

    SELECT SUM(Total_Expenses)
    FROM Fact
    WHERE ProductId =1;
---------------------------------------------------------------------

4. What is the minimum sales of a product?

   select min(F.sales) As min_sales
   from Product,Fact F
----------------------------------------------------------------------
5. Display the max Cost of Good Sold (COGS). 
   
   SELECT MAX(COGS)
   FROM Fact;
------------------------------------------------------
6. Display the details of the product where product 
   type is coffee.

   Select * From Product
   Where Product_Type ='Coffee'
--------------------------------------------------------------------
7. Display the details where total expenses are greater than 40.
  
  SELECT * FROM Fact
  WHERE Total_Expenses > 40;
--------------------------------------------------------------------
8. What is the average sales in area code 719?

  SELECT AVG(Sales)
  FROM Fact
  WHERE Area_Code=719;
--------------------------------------------------------------------------
9. Find out the total profit generated by Colorado state.
 
  SELECt L.State, SUM(F.PROFIT) AS TotalProfit
  FROM Fact F, Location L
  GROUP BY L.State
  HAVING L.State = 'Colorado';
----------------------------------------------------------------------------- 
10. Display the average inventory for each product ID.   SELECt ProductId, AVG(Inventory) AS Average_Inventory
  FROM Fact 
  GROUP BY ProductId
  Order BY ProductId;
 
 ---------------------------------------------------------------------------11. Display state in a sequential order in a Location Table.  SELECT * FROM Location
  ORDER BY State ASC;

  --------------------------------------------------------------------------12. Display the average budget of the Product where the average budget    margin should be greater than 100.   Select P.Product, avg(margin) As Average_Budget_Margin from fact F, Product P   group by P.Product   having avg(margin) > 100      -------------------------------------------------------------------13. What is the total sales done on date 2010-01-01?   SELECT SUM(Sales) AS total_sales FROM Fact WHERE DATE ='2010-01-01'

   ---------------------------------------------------------------------
14. Display the average total expense of each product ID 
    on an individual date. 


  Select AVG(Total_Expenses) as Average_Total_Expense, ProductID, Date from Fact
  group by ProductId, Date Order by ProductId

   -------------------------------------------------------------------------
15. Display the table with the following attributes such as area_code. 
    
	Select Date, Fact.productid, product_type, product, Sales, profit, state, Location.Area_code
    from Fact
    inner join
    Location
    on Fact. Area_Code=Location.Area_Code
    inner join
    Product
    on Product.ProductId=Fact.ProductId

	-------------------------------------------------------------------------

16. Display the rank without any gap to show the sales wise rank.

   SELECT Date, productid, Sales, profit, area_code, DENSE_RANK() OVER
   (ORDER BY Sales ASC) AS Sales_Rank FROM [Fact];

   --------------------------------------------------------------------
17. Find the state wise profit and sales.

      
	  SELECT L.STATE,SUM(F.PROFIT) AS 'PROFIT',SUM(F.SALES) AS 'SALES' FROM LOCATION L,
	  [FACT] F WHERE F.AREA_CODE=L.AREA_CODE GROUP BY L.STATE;

-----------------------------------------------------------------------------------
18. Find the state wise profit and sales along with the productname.

     select Product, state, sum(sales) as Sales,sum(profit) as Profit from [fact] inner
     join location on [fact].Area_Code=location.Area_Code inner join [Product] on
     [fact].ProductId=[Product].ProductId group by state ,Product	 
	------------------------------------------------------------------------------
19. If there is an increase in sales of 5%, calculate the increasedsales.

     Select ProductId, Sales as Actual_sales, Sales * 1.05 as Increased_Sales
	 from Fact


20. Find the maximum profit along with the product ID and producttype.

    Select P.ProductId, Product_Type, Profit from Fact
	inner join
	Product P
	on 
	P.ProductId=Fact.ProductId
	Where Profit = (Select MAX(Profit) from Fact)
  
------------------------------------------------------------------------------    
	

21. Create a stored procedure to fetch the result according to the product type
    from Product Table.

	Create Procedure Proc_ptype (@ptype varchar(30))
	as
	return
	   Select * from Product where Product_Type=@ptype

	   Exec Proc_ptype'tea'
-----------------------------------------------------------------------------------------

22. Write a query by creating a condition in which if the total expenses is lessthan
    60 then it is a profit or else loss. 

	Select Total_expenses, IIF(Total_Expenses < 60, 'profit','Loss')
	as Expense_Status
	From Fact;

----------------------------------------------------------------------------------------
23. Give the total weekly sales value with the date and product IDdetails. Use
    roll-up to pull the data in hierarchical order	Select DATEPART(Week, Date)as Weekly, ProductId, SUM(Sales) as Total_Sales from Fact	Group by	rollup (ProductId,Date)	Order by ProductId------------------------------------------------------------------------------------------
24. Apply union and intersection operator on the tables which consist ofattribute area code.    Select Area_Code from Fact   Union   Select Area_code from Location   Select Area_Code from Fact   INTERSECT   Select Area_code from Location-------------------------------------------------------------------------------------
25. Create a user-defined function for the product table to fetch a particular    product type based upon the user’s preference. 

	CREATE FUNCTION PRODUCT_TYPE(@Product_TYPE VARCHAR(30))
	RETURNS TABLE
	RETURN Select * from Product Where Product_Type = @Product_TYPE

	Select * from dbo.PRODUCT_TYPE ('Coffee')

--------------------------------------------------------------------------------
26. Change the product type from coffee to tea where product IDis 1 and undo it. 

    select * from Product

    Begin Tran t1
    Update Product set Product_Type ='coffe' Where ProductId = 1

    rollback

-------------------------------------------------------------------------------------
27. Display the date, product ID and sales where total expenses are between 100 to 200. 
    Select Date, ProductId, Sales, Total_Expenses from Fact
	Where Total_Expenses between 100 and 200
	Order by Total_Expenses
---------------------------------------------------------------------------------
28. Delete the records in the Product Table for regular type.

    DELETE FROM Product Where Type='Regular'
---------------------------------------------------------------------------------
29. Display the ASCII value of the fifth character from the columnProduct.


    Select Product, SUBSTRING(Product,5,1) as Fifth_Char,
	ASCII (SUBSTRING(PRODUCT,5,1)) as ASCII_value
	From Product;
	










 Select * from Fact





 Select * from Product
 Select * from Location
 Select * from Fact


